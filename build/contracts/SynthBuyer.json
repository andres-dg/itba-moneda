{
  "contractName": "SynthBuyer",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "snx",
          "type": "uint256"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "synthetixResolver",
      "outputs": [
        {
          "internalType": "contract IAddressResolver",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "etherAmount",
          "type": "uint256"
        }
      ],
      "name": "buySNX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"snx\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"etherAmount\",\"type\":\"uint256\"}],\"name\":\"buySNX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"synthetixResolver\",\"outputs\":[{\"internalType\":\"contract IAddressResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/andres/itba/contracts/SynthBuyer.sol\":\"SynthBuyer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/andres/itba/contracts/SynthBuyer.sol\":{\"keccak256\":\"0xcb481e22851fdccaea50ec34a44e6e38736d241f713803ad164f661525107a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34fae33c09e61ced7cee02227eba7add39268e2b747f114236d989c5b7ddac1d\",\"dweb:/ipfs/QmPP22iRs23CQsMzHUjDMAV4PbeC7tiZxdhR4YULFjdaH4\"]},\"synthetix/contracts/interfaces/IAddressResolver.sol\":{\"keccak256\":\"0xa1e4d6c2007494ffd54789f0bd3c267191579a578b5ca8099ee79aecb4def1b4\",\"urls\":[\"bzz-raw://d37758d3a02c001fcb9d888d6ccfb63acbadc2628b8a2eaffe9c7b4bf68a1087\",\"dweb:/ipfs/QmcAkavFCgroCaXGVMGzPg6Em5a8V7Lovz9F3GFyk2KG6i\"]},\"synthetix/contracts/interfaces/IDepot.sol\":{\"keccak256\":\"0xfb3c4e94c9d7e5d1708bec5c3ad83c401252773e08fa4e3a4079ef3baae2b27c\",\"urls\":[\"bzz-raw://aa29207b1763dce99c7e974c285d6c5cf11fb866fd7e7d03e9c3f8b9dae60b0e\",\"dweb:/ipfs/Qmev4adR5ZFcRZbgyfpvvhiKd4JuDbXdMbpS1AyHs7LaiJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5073c6f404c96aa136b0ba11d40db17394f09b0f20f16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610493806100746000396000f3fe6080604052600436106100345760003560e01c806312065fe014610039578063153cd71614610064578063ead8f245146100a5575b600080fd5b34801561004557600080fd5b5061004e6100e7565b6040518082815260200191505060405180910390f35b34801561007057600080fd5b5061007961012e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100d1600480360360208110156100bb57600080fd5b8101908080359060200190929190505050610152565b6040518082815260200191505060405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321f8a7216040518163ffffffff1660e01b815260040180807f4465706f74000000000000000000000000000000000000000000000000000000815250602001905060206040518083038186803b1580156101e657600080fd5b505afa1580156101fa573d6000803e3d6000fd5b505050506040513d602081101561021057600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806104366028913960400191505060405180910390fd5b82341161031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496e73756666696369656e742076616c75652070726f7669646564000000000081525060200191505060405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166302279438856040518263ffffffff1660e01b81526004016020604051808303818588803b15801561036857600080fd5b505af115801561037c573d6000803e3d6000fd5b50505050506040513d602081101561039357600080fd5b8101908080519060200190929190505050905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550809250505091905056fe4465706f74206973206d697373696e672066726f6d2053796e746865746978207265736f6c766572a264697066735822122081fd87ea651b9bbb1a36d7dfbd0ca2b6791e072ae0f14bb4283bc98fc4a4994764736f6c63430007040033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c806312065fe014610039578063153cd71614610064578063ead8f245146100a5575b600080fd5b34801561004557600080fd5b5061004e6100e7565b6040518082815260200191505060405180910390f35b34801561007057600080fd5b5061007961012e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100d1600480360360208110156100bb57600080fd5b8101908080359060200190929190505050610152565b6040518082815260200191505060405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321f8a7216040518163ffffffff1660e01b815260040180807f4465706f74000000000000000000000000000000000000000000000000000000815250602001905060206040518083038186803b1580156101e657600080fd5b505afa1580156101fa573d6000803e3d6000fd5b505050506040513d602081101561021057600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806104366028913960400191505060405180910390fd5b82341161031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496e73756666696369656e742076616c75652070726f7669646564000000000081525060200191505060405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166302279438856040518263ffffffff1660e01b81526004016020604051808303818588803b15801561036857600080fd5b505af115801561037c573d6000803e3d6000fd5b50505050506040513d602081101561039357600080fd5b8101908080519060200190929190505050905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550809250505091905056fe4465706f74206973206d697373696e672066726f6d2053796e746865746978207265736f6c766572a264697066735822122081fd87ea651b9bbb1a36d7dfbd0ca2b6791e072ae0f14bb4283bc98fc4a4994764736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "175:1069:1:-:0;;;567:121;;;;;;;;;;639:42;594:17;;:89;;;;;;;;;;;;;;;;;;175:1069;;;;;;",
  "deployedSourceMap": "175:1069:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:98;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;431:41;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;692:447;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1143:98;1186:15;1216:8;:20;1225:10;1216:20;;;;;;;;;;;;;;;;1209:27;;1143:98;:::o;431:41::-;;;;;;;;;;;;:::o;692:447::-;753:14;776:12;798:17;;;;;;;;;;:28;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:60;;876:1;850:28;;858:5;850:28;;;;842:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;950:11;938:9;:23;930:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:11;1014:5;:25;;;1047:11;1014:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:61;;1114:3;1091:8;:20;1100:10;1091:20;;;;;;;;;;;;;;;;:26;1068:8;:20;1077:10;1068:20;;;;;;;;;;;;;;;:49;;;;1131:3;1124:10;;;;692:447;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.16;\n\nimport 'synthetix/contracts/interfaces/IAddressResolver.sol';\nimport \"synthetix/contracts/interfaces/IDepot.sol\";\n\ncontract SynthBuyer {\n  // This should be instantiated with our ReadProxyAddressResolver\n  // it's a ReadProxy that won't change, so safe to code it here without a setter\n  // see https://docs.synthetix.io/addresses for addresses in mainnet and testnets\n  IAddressResolver public synthetixResolver;\n\n  mapping(address => uint256) private balances;\n\n  event Buy(address user, uint256 snx);\n\n  constructor() public {\n    synthetixResolver = IAddressResolver(address(0xc6F404c96Aa136b0Ba11d40dB17394F09B0f20F1));\n  }\n\n  function buySNX(uint256 etherAmount) payable public returns (uint256 amount)  {\n    IDepot depot = IDepot(synthetixResolver.getAddress(\"Depot\"));\n    require(address(depot) != address(0), \"Depot is missing from Synthetix resolver\");\n\n    require(msg.value > etherAmount, \"Insufficient value provided\");\n\n    uint256 snx = depot.exchangeEtherForSNX{value: etherAmount}();\n\n    balances[msg.sender] = balances[msg.sender] + snx;\n\n    return snx;\n  }\n\n  function getBalance() public view returns (uint256 balance) {\n    return balances[msg.sender];\n  }\n\n}",
  "sourcePath": "/Users/andres/itba/contracts/SynthBuyer.sol",
  "ast": {
    "absolutePath": "/Users/andres/itba/contracts/SynthBuyer.sol",
    "exportedSymbols": {
      "IAddressResolver": [
        159
      ],
      "IDepot": [
        249
      ],
      "SynthBuyer": [
        133
      ]
    },
    "id": 134,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:25:1"
      },
      {
        "absolutePath": "synthetix/contracts/interfaces/IAddressResolver.sol",
        "file": "synthetix/contracts/interfaces/IAddressResolver.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 134,
        "sourceUnit": 160,
        "src": "60:61:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "synthetix/contracts/interfaces/IDepot.sol",
        "file": "synthetix/contracts/interfaces/IDepot.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 134,
        "sourceUnit": 250,
        "src": "122:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 133,
        "linearizedBaseContracts": [
          133
        ],
        "name": "SynthBuyer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "153cd716",
            "id": 38,
            "mutability": "mutable",
            "name": "synthetixResolver",
            "nodeType": "VariableDeclaration",
            "scope": 133,
            "src": "431:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAddressResolver_$159",
              "typeString": "contract IAddressResolver"
            },
            "typeName": {
              "id": 37,
              "name": "IAddressResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 159,
              "src": "431:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAddressResolver_$159",
                "typeString": "contract IAddressResolver"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 133,
            "src": "477:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 41,
              "keyType": {
                "id": 39,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "485:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "477:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 40,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "496:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 48,
            "name": "Buy",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "536:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "snx",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "550:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:27:1"
            },
            "src": "526:37:1"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "588:100:1",
              "statements": [
                {
                  "expression": {
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "synthetixResolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "594:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAddressResolver_$159",
                        "typeString": "contract IAddressResolver"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307863364634303463393641613133366230426131316434306442313733393446303942306632304631",
                              "id": 55,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "639:42:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xc6F404c96Aa136b0Ba11d40dB17394F09B0f20F1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "631:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "631:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "631:51:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 52,
                        "name": "IAddressResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "614:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAddressResolver_$159_$",
                          "typeString": "type(contract IAddressResolver)"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "614:69:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAddressResolver_$159",
                        "typeString": "contract IAddressResolver"
                      }
                    },
                    "src": "594:89:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAddressResolver_$159",
                      "typeString": "contract IAddressResolver"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "594:89:1"
                }
              ]
            },
            "id": 61,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:2:1"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:0:1"
            },
            "scope": 133,
            "src": "567:121:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "770:369:1",
              "statements": [
                {
                  "assignments": [
                    69
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69,
                      "mutability": "mutable",
                      "name": "depot",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "776:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDepot_$249",
                        "typeString": "contract IDepot"
                      },
                      "typeName": {
                        "id": 68,
                        "name": "IDepot",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 249,
                        "src": "776:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDepot_$249",
                          "typeString": "contract IDepot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4465706f74",
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "827:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c575414f284c0d331cbae2d4d38fb7ef3b02c2b4f91eb4a04c9db476fedb3891",
                              "typeString": "literal_string \"Depot\""
                            },
                            "value": "Depot"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c575414f284c0d331cbae2d4d38fb7ef3b02c2b4f91eb4a04c9db476fedb3891",
                              "typeString": "literal_string \"Depot\""
                            }
                          ],
                          "expression": {
                            "id": 71,
                            "name": "synthetixResolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "798:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAddressResolver_$159",
                              "typeString": "contract IAddressResolver"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 142,
                          "src": "798:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "798:37:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 70,
                      "name": "IDepot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "791:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDepot_$249_$",
                        "typeString": "type(contract IDepot)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDepot_$249",
                      "typeString": "contract IDepot"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "776:60:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 80,
                              "name": "depot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "858:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDepot_$249",
                                "typeString": "contract IDepot"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IDepot_$249",
                                "typeString": "contract IDepot"
                              }
                            ],
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "850:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 78,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "850:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "850:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 84,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "876:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "868:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 82,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "868:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "868:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "850:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f74206973206d697373696e672066726f6d2053796e746865746978207265736f6c766572",
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "880:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbb8b05e9b2ee3c98e97cad9cf4c3e45239972d9907008bb94051c1f09110ae1",
                          "typeString": "literal_string \"Depot is missing from Synthetix resolver\""
                        },
                        "value": "Depot is missing from Synthetix resolver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbb8b05e9b2ee3c98e97cad9cf4c3e45239972d9907008bb94051c1f09110ae1",
                          "typeString": "literal_string \"Depot is missing from Synthetix resolver\""
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "842:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "842:81:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 91,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "938:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "938:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 93,
                          "name": "etherAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "950:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "938:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742076616c75652070726f7669646564",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "963:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ea02a991c1236f36f58a98497b56c7cc00dd10228789cd20af4116ff8dabd8e",
                          "typeString": "literal_string \"Insufficient value provided\""
                        },
                        "value": "Insufficient value provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ea02a991c1236f36f58a98497b56c7cc00dd10228789cd20af4116ff8dabd8e",
                          "typeString": "literal_string \"Insufficient value provided\""
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "930:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "930:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "930:63:1"
                },
                {
                  "assignments": [
                    99
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99,
                      "mutability": "mutable",
                      "name": "snx",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "1000:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1000:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 100,
                          "name": "depot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1014:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDepot_$249",
                            "typeString": "contract IDepot"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeEtherForSNX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 213,
                        "src": "1014:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
                          "typeString": "function () payable external returns (uint256)"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 102,
                          "name": "etherAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "1047:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1014:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
                        "typeString": "function () payable external returns (uint256)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1014:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1000:61:1"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 106,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1068:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 109,
                      "indexExpression": {
                        "expression": {
                          "id": 107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1077:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1077:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1068:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 110,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "1091:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 113,
                        "indexExpression": {
                          "expression": {
                            "id": 111,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1100:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1100:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1091:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 114,
                        "name": "snx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1114:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1091:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1068:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:49:1"
                },
                {
                  "expression": {
                    "id": 118,
                    "name": "snx",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 99,
                    "src": "1131:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 67,
                  "id": 119,
                  "nodeType": "Return",
                  "src": "1124:10:1"
                }
              ]
            },
            "functionSelector": "ead8f245",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buySNX",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "etherAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "708:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:21:1"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "753:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "752:16:1"
            },
            "scope": 133,
            "src": "692:447:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "1203:38:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 126,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1216:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 129,
                    "indexExpression": {
                      "expression": {
                        "id": 127,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1225:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1225:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1216:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 125,
                  "id": 130,
                  "nodeType": "Return",
                  "src": "1209:27:1"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:2:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1186:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1185:17:1"
            },
            "scope": 133,
            "src": "1143:98:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 134,
        "src": "175:1069:1"
      }
    ],
    "src": "33:1211:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/andres/itba/contracts/SynthBuyer.sol",
    "exportedSymbols": {
      "IAddressResolver": [
        159
      ],
      "IDepot": [
        249
      ],
      "SynthBuyer": [
        133
      ]
    },
    "id": 134,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:25:1"
      },
      {
        "absolutePath": "synthetix/contracts/interfaces/IAddressResolver.sol",
        "file": "synthetix/contracts/interfaces/IAddressResolver.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 134,
        "sourceUnit": 160,
        "src": "60:61:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "synthetix/contracts/interfaces/IDepot.sol",
        "file": "synthetix/contracts/interfaces/IDepot.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 134,
        "sourceUnit": 250,
        "src": "122:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 133,
        "linearizedBaseContracts": [
          133
        ],
        "name": "SynthBuyer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "153cd716",
            "id": 38,
            "mutability": "mutable",
            "name": "synthetixResolver",
            "nodeType": "VariableDeclaration",
            "scope": 133,
            "src": "431:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAddressResolver_$159",
              "typeString": "contract IAddressResolver"
            },
            "typeName": {
              "id": 37,
              "name": "IAddressResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 159,
              "src": "431:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAddressResolver_$159",
                "typeString": "contract IAddressResolver"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 133,
            "src": "477:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 41,
              "keyType": {
                "id": 39,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "485:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "477:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 40,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "496:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 48,
            "name": "Buy",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "536:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "snx",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "550:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:27:1"
            },
            "src": "526:37:1"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "588:100:1",
              "statements": [
                {
                  "expression": {
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "synthetixResolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "594:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAddressResolver_$159",
                        "typeString": "contract IAddressResolver"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307863364634303463393641613133366230426131316434306442313733393446303942306632304631",
                              "id": 55,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "639:42:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xc6F404c96Aa136b0Ba11d40dB17394F09B0f20F1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "631:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "631:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "631:51:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 52,
                        "name": "IAddressResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "614:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAddressResolver_$159_$",
                          "typeString": "type(contract IAddressResolver)"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "614:69:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAddressResolver_$159",
                        "typeString": "contract IAddressResolver"
                      }
                    },
                    "src": "594:89:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAddressResolver_$159",
                      "typeString": "contract IAddressResolver"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "594:89:1"
                }
              ]
            },
            "id": 61,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:2:1"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:0:1"
            },
            "scope": 133,
            "src": "567:121:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "770:369:1",
              "statements": [
                {
                  "assignments": [
                    69
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69,
                      "mutability": "mutable",
                      "name": "depot",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "776:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDepot_$249",
                        "typeString": "contract IDepot"
                      },
                      "typeName": {
                        "id": 68,
                        "name": "IDepot",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 249,
                        "src": "776:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDepot_$249",
                          "typeString": "contract IDepot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4465706f74",
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "827:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c575414f284c0d331cbae2d4d38fb7ef3b02c2b4f91eb4a04c9db476fedb3891",
                              "typeString": "literal_string \"Depot\""
                            },
                            "value": "Depot"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c575414f284c0d331cbae2d4d38fb7ef3b02c2b4f91eb4a04c9db476fedb3891",
                              "typeString": "literal_string \"Depot\""
                            }
                          ],
                          "expression": {
                            "id": 71,
                            "name": "synthetixResolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "798:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAddressResolver_$159",
                              "typeString": "contract IAddressResolver"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 142,
                          "src": "798:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "798:37:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 70,
                      "name": "IDepot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "791:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDepot_$249_$",
                        "typeString": "type(contract IDepot)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDepot_$249",
                      "typeString": "contract IDepot"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "776:60:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 80,
                              "name": "depot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "858:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDepot_$249",
                                "typeString": "contract IDepot"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IDepot_$249",
                                "typeString": "contract IDepot"
                              }
                            ],
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "850:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 78,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "850:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "850:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 84,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "876:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "868:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 82,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "868:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "868:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "850:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f74206973206d697373696e672066726f6d2053796e746865746978207265736f6c766572",
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "880:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbb8b05e9b2ee3c98e97cad9cf4c3e45239972d9907008bb94051c1f09110ae1",
                          "typeString": "literal_string \"Depot is missing from Synthetix resolver\""
                        },
                        "value": "Depot is missing from Synthetix resolver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbb8b05e9b2ee3c98e97cad9cf4c3e45239972d9907008bb94051c1f09110ae1",
                          "typeString": "literal_string \"Depot is missing from Synthetix resolver\""
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "842:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "842:81:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 91,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "938:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "938:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 93,
                          "name": "etherAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "950:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "938:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742076616c75652070726f7669646564",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "963:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ea02a991c1236f36f58a98497b56c7cc00dd10228789cd20af4116ff8dabd8e",
                          "typeString": "literal_string \"Insufficient value provided\""
                        },
                        "value": "Insufficient value provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ea02a991c1236f36f58a98497b56c7cc00dd10228789cd20af4116ff8dabd8e",
                          "typeString": "literal_string \"Insufficient value provided\""
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "930:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "930:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "930:63:1"
                },
                {
                  "assignments": [
                    99
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99,
                      "mutability": "mutable",
                      "name": "snx",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "1000:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1000:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 100,
                          "name": "depot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1014:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDepot_$249",
                            "typeString": "contract IDepot"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeEtherForSNX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 213,
                        "src": "1014:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
                          "typeString": "function () payable external returns (uint256)"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 102,
                          "name": "etherAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "1047:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1014:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
                        "typeString": "function () payable external returns (uint256)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1014:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1000:61:1"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 106,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1068:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 109,
                      "indexExpression": {
                        "expression": {
                          "id": 107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1077:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1077:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1068:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 110,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "1091:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 113,
                        "indexExpression": {
                          "expression": {
                            "id": 111,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1100:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1100:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1091:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 114,
                        "name": "snx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1114:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1091:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1068:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:49:1"
                },
                {
                  "expression": {
                    "id": 118,
                    "name": "snx",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 99,
                    "src": "1131:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 67,
                  "id": 119,
                  "nodeType": "Return",
                  "src": "1124:10:1"
                }
              ]
            },
            "functionSelector": "ead8f245",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buySNX",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "etherAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "708:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:21:1"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "753:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "752:16:1"
            },
            "scope": 133,
            "src": "692:447:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "1203:38:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 126,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1216:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 129,
                    "indexExpression": {
                      "expression": {
                        "id": 127,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1225:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1225:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1216:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 125,
                  "id": 130,
                  "nodeType": "Return",
                  "src": "1209:27:1"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:2:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1186:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1185:17:1"
            },
            "scope": 133,
            "src": "1143:98:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 134,
        "src": "175:1069:1"
      }
    ],
    "src": "33:1211:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0xe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "snx",
              "type": "uint256"
            }
          ],
          "name": "Buy",
          "type": "event"
        },
        "0x3c94c61095a56a152fe1bbfd309b16975bd0a09773c468807345464456c181d1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "ethAmount",
              "type": "uint256"
            }
          ],
          "name": "BuyAttempt",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x619DEeBA1a79907e66f0193f28cDa10683f6974a",
      "transactionHash": "0x6d19808b8037033fe6b201f7db877d1372f4ae324337612e69e4fccacfeaa3bd"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-11-17T18:03:55.567Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}